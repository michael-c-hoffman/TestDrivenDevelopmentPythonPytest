{
  "version": "2",
  "toolVersion": "1.58.0",
  "snippets": {
    "0f57133254058ca5c10862a4d3671e73a38a6f2e97043aa0cf79613333fd418d": {
      "translations": {
        "python": {
          "source": "lambda_.PythonFunction(self, \"MyFunction\",\n    entry=\"/path/to/my/function\",  # required\n    runtime=Runtime.PYTHON_3_8,  # required\n    index=\"my_index.py\",  # optional, defaults to 'index.py'\n    handler=\"my_exported_func\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new PythonFunction(this, \"MyFunction\", new PythonFunctionProps {\n    Entry = \"/path/to/my/function\",  // required\n    Runtime = Runtime.PYTHON_3_8,  // required\n    Index = \"my_index.py\",  // optional, defaults to 'index.py'\n    Handler = \"my_exported_func\"\n});",
          "version": "1"
        },
        "java": {
          "source": "PythonFunction.Builder.create(this, \"MyFunction\")\n        .entry(\"/path/to/my/function\") // required\n        .runtime(Runtime.PYTHON_3_8) // required\n        .index(\"my_index.py\") // optional, defaults to 'index.py'\n        .handler(\"my_exported_func\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "lambda.NewPythonFunction(this, jsii.String(\"MyFunction\"), &pythonFunctionProps{\n\tentry: jsii.String(\"/path/to/my/function\"),\n\t // required\n\truntime: *awscdkawslambda.Runtime_PYTHON_3_8(),\n\t // required\n\tindex: jsii.String(\"my_index.py\"),\n\t // optional, defaults to 'index.py'\n\thandler: jsii.String(\"my_exported_func\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new lambda.PythonFunction(this, 'MyFunction', {\n  entry: '/path/to/my/function', // required\n  runtime: Runtime.PYTHON_3_8, // required\n  index: 'my_index.py', // optional, defaults to 'index.py'\n  handler: 'my_exported_func', // optional, defaults to 'handler'\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-lambda-python"
        },
        "field": {
          "field": "markdown",
          "line": 27
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.PythonFunction",
        "@aws-cdk/aws-lambda-python.PythonFunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#PYTHON_3_8",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew lambda.PythonFunction(this, 'MyFunction', {\n  entry: '/path/to/my/function', // required\n  runtime: Runtime.PYTHON_3_8, // required\n  index: 'my_index.py', // optional, defaults to 'index.py'\n  handler: 'my_exported_func', // optional, defaults to 'handler'\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "104": 1,
        "193": 1,
        "194": 2,
        "197": 1,
        "226": 1,
        "281": 4
      },
      "fqnsFingerprint": "a82a6334841f984002c258a5c5e382cf2b17e301250f3faf53c3fa678bd3feed"
    },
    "57e2af144912fc5e5ec5e25eff9fe671540a11e540e1afe7ba9c58d859ff34dc": {
      "translations": {
        "python": {
          "source": "lambda_.PythonLayerVersion(self, \"MyLayer\",\n    entry=\"/path/to/my/layer\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new PythonLayerVersion(this, \"MyLayer\", new PythonLayerVersionProps {\n    Entry = \"/path/to/my/layer\"\n});",
          "version": "1"
        },
        "java": {
          "source": "PythonLayerVersion.Builder.create(this, \"MyLayer\")\n        .entry(\"/path/to/my/layer\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "lambda.NewPythonLayerVersion(this, jsii.String(\"MyLayer\"), &pythonLayerVersionProps{\n\tentry: jsii.String(\"/path/to/my/layer\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new lambda.PythonLayerVersion(this, 'MyLayer', {\n  entry: '/path/to/my/layer', // point this to your library's directory\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-lambda-python"
        },
        "field": {
          "field": "markdown",
          "line": 46
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.PythonLayerVersion",
        "@aws-cdk/aws-lambda-python.PythonLayerVersionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew lambda.PythonLayerVersion(this, 'MyLayer', {\n  entry: '/path/to/my/layer', // point this to your library's directory\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 3,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "9ed95562a1d6cbfa36d90ddb816223a90d0a1798c5bbd66942a9fdfe0ac7dbc7"
    },
    "f640b70ee07a02f3f87eb24d278b3be28922d507d45038e0e3a4472075cbcdc4": {
      "translations": {
        "python": {
          "source": "lambda_.PythonFunction(self, \"MyFunction\",\n    entry=\"/path/to/my/function\",\n    runtime=Runtime.PYTHON_3_8,\n    layers=[\n        lambda_.PythonLayerVersion(self, \"MyLayer\",\n            entry=\"/path/to/my/layer\"\n        )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new PythonFunction(this, \"MyFunction\", new PythonFunctionProps {\n    Entry = \"/path/to/my/function\",\n    Runtime = Runtime.PYTHON_3_8,\n    Layers = new [] {\n        new PythonLayerVersion(this, \"MyLayer\", new PythonLayerVersionProps {\n            Entry = \"/path/to/my/layer\"\n        }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "PythonFunction.Builder.create(this, \"MyFunction\")\n        .entry(\"/path/to/my/function\")\n        .runtime(Runtime.PYTHON_3_8)\n        .layers(List.of(\n            PythonLayerVersion.Builder.create(this, \"MyLayer\")\n                    .entry(\"/path/to/my/layer\")\n                    .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "lambda.NewPythonFunction(this, jsii.String(\"MyFunction\"), &pythonFunctionProps{\n\tentry: jsii.String(\"/path/to/my/function\"),\n\truntime: *awscdkawslambda.Runtime_PYTHON_3_8(),\n\tlayers: []iLayerVersion{\n\t\tlambda.NewPythonLayerVersion(this, jsii.String(\"MyLayer\"), &pythonLayerVersionProps{\n\t\t\tentry: jsii.String(\"/path/to/my/layer\"),\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new lambda.PythonFunction(this, 'MyFunction', {\n  entry: '/path/to/my/function',\n  runtime: Runtime.PYTHON_3_8,\n  layers: [\n    new lambda.PythonLayerVersion(this, 'MyLayer', {\n      entry: '/path/to/my/layer', // point this to your library's directory\n    }),\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-lambda-python"
        },
        "field": {
          "field": "markdown",
          "line": 54
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.PythonFunction",
        "@aws-cdk/aws-lambda-python.PythonFunctionProps",
        "@aws-cdk/aws-lambda-python.PythonLayerVersion",
        "@aws-cdk/aws-lambda-python.PythonLayerVersionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#PYTHON_3_8",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew lambda.PythonFunction(this, 'MyFunction', {\n  entry: '/path/to/my/function',\n  runtime: Runtime.PYTHON_3_8,\n  layers: [\n    new lambda.PythonLayerVersion(this, 'MyLayer', {\n      entry: '/path/to/my/layer', // point this to your library's directory\n    }),\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 10,
        "104": 2,
        "192": 1,
        "193": 2,
        "194": 3,
        "197": 2,
        "226": 1,
        "281": 4
      },
      "fqnsFingerprint": "a90dbe78ef38d76f0825cb8e96840d99bcf15be1a08b6a7444aacc6d7153075f"
    },
    "6be359055ce4239acb484dfcbb9c7400fe1672de01680d517406110fe7a85216": {
      "translations": {
        "python": {
          "source": "entry = \"/path/to/function\"\nimage = DockerImage.from_build(entry)\n\nlambda_.PythonFunction(self, \"function\",\n    entry=entry,\n    runtime=Runtime.PYTHON_3_8,\n    bundling=lambda.BundlingOptions(\n        build_args={\"PIP_INDEX_URL\": \"https://your.index.url/simple/\", \"PIP_EXTRA_INDEX_URL\": \"https://your.extra-index.url/simple/\"}\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "string entry = \"/path/to/function\";\nDockerImage image = DockerImage.FromBuild(entry);\n\nnew PythonFunction(this, \"function\", new PythonFunctionProps {\n    Entry = entry,\n    Runtime = Runtime.PYTHON_3_8,\n    Bundling = new BundlingOptions {\n        BuildArgs = new Dictionary<string, string> { { \"PIP_INDEX_URL\", \"https://your.index.url/simple/\" }, { \"PIP_EXTRA_INDEX_URL\", \"https://your.extra-index.url/simple/\" } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "String entry = \"/path/to/function\";\nDockerImage image = DockerImage.fromBuild(entry);\n\nPythonFunction.Builder.create(this, \"function\")\n        .entry(entry)\n        .runtime(Runtime.PYTHON_3_8)\n        .bundling(BundlingOptions.builder()\n                .buildArgs(Map.of(\"PIP_INDEX_URL\", \"https://your.index.url/simple/\", \"PIP_EXTRA_INDEX_URL\", \"https://your.extra-index.url/simple/\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "entry := \"/path/to/function\"\nimage := awscdkcore.DockerImage.fromBuild(entry)\n\nlambda.NewPythonFunction(this, jsii.String(\"function\"), &pythonFunctionProps{\n\tentry: jsii.String(entry),\n\truntime: *awscdkawslambda.Runtime_PYTHON_3_8(),\n\tbundling: &bundlingOptions{\n\t\tbuildArgs: map[string]*string{\n\t\t\t\"PIP_INDEX_URL\": jsii.String(\"https://your.index.url/simple/\"),\n\t\t\t\"PIP_EXTRA_INDEX_URL\": jsii.String(\"https://your.extra-index.url/simple/\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: \"https://your.index.url/simple/\", PIP_EXTRA_INDEX_URL: \"https://your.extra-index.url/simple/\" },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-lambda-python"
        },
        "field": {
          "field": "markdown",
          "line": 122
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.BundlingOptions",
        "@aws-cdk/aws-lambda-python.PythonFunction",
        "@aws-cdk/aws-lambda-python.PythonFunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#PYTHON_3_8",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.DockerImage",
        "@aws-cdk/core.DockerImage#fromBuild"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: \"https://your.index.url/simple/\", PIP_EXTRA_INDEX_URL: \"https://your.extra-index.url/simple/\" },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 15,
        "104": 1,
        "193": 3,
        "194": 3,
        "196": 1,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 5,
        "282": 1
      },
      "fqnsFingerprint": "937096e6de8abbfc0c6ef71131d8ebc7a98a6a03f77949e37a1b17d70c942abc"
    },
    "c54a411dbde758afd9ce839a37a431d18de199ca1b6f63f9ac1f536332c87456": {
      "translations": {
        "python": {
          "source": "entry = \"/path/to/function\"\nimage = DockerImage.from_build(entry)\n\nlambda_.PythonFunction(self, \"function\",\n    entry=entry,\n    runtime=Runtime.PYTHON_3_8,\n    bundling=lambda.BundlingOptions(image=image)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "string entry = \"/path/to/function\";\nDockerImage image = DockerImage.FromBuild(entry);\n\nnew PythonFunction(this, \"function\", new PythonFunctionProps {\n    Entry = entry,\n    Runtime = Runtime.PYTHON_3_8,\n    Bundling = new BundlingOptions { Image = image }\n});",
          "version": "1"
        },
        "java": {
          "source": "String entry = \"/path/to/function\";\nDockerImage image = DockerImage.fromBuild(entry);\n\nPythonFunction.Builder.create(this, \"function\")\n        .entry(entry)\n        .runtime(Runtime.PYTHON_3_8)\n        .bundling(BundlingOptions.builder().image(image).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "entry := \"/path/to/function\"\nimage := awscdkcore.DockerImage.fromBuild(entry)\n\nlambda.NewPythonFunction(this, jsii.String(\"function\"), &pythonFunctionProps{\n\tentry: jsii.String(entry),\n\truntime: *awscdkawslambda.Runtime_PYTHON_3_8(),\n\tbundling: &bundlingOptions{\n\t\timage: image,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n entry,\n runtime: Runtime.PYTHON_3_8,\n bundling: { image },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-lambda-python"
        },
        "field": {
          "field": "markdown",
          "line": 137
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.BundlingOptions",
        "@aws-cdk/aws-lambda-python.PythonFunction",
        "@aws-cdk/aws-lambda-python.PythonFunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#PYTHON_3_8",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.DockerImage",
        "@aws-cdk/core.DockerImage#fromBuild"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n entry,\n runtime: Runtime.PYTHON_3_8,\n bundling: { image },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 13,
        "104": 1,
        "193": 2,
        "194": 3,
        "196": 1,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "282": 2
      },
      "fqnsFingerprint": "937096e6de8abbfc0c6ef71131d8ebc7a98a6a03f77949e37a1b17d70c942abc"
    },
    "eeb921bd3373958e74cb8886f48aecc9b917b8e897598470e4666e92d484d893": {
      "translations": {
        "python": {
          "source": "from child_process import exec_sync\n\n\nentry = \"/path/to/function\"\nimage = DockerImage.from_build(entry)\n\ndomain = \"my-domain\"\ndomain_owner = \"111122223333\"\nrepo_name = \"my_repo\"\nregion = \"us-east-1\"\ncode_artifact_auth_token = exec_sync(f\"aws codeartifact get-authorization-token --domain {domain} --domain-owner {domainOwner} --query authorizationToken --output text\").to_string().trim()\n\nindex_url = f\"https://aws:{codeArtifactAuthToken}@{domain}-{domainOwner}.d.codeartifact.{region}.amazonaws.com/pypi/{repoName}/simple/\"\n\nlambda_.PythonFunction(self, \"function\",\n    entry=entry,\n    runtime=Runtime.PYTHON_3_8,\n    bundling=lambda.BundlingOptions(\n        environment={\"PIP_INDEX_URL\": index_url}\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Child.Process;\n\n\nstring entry = \"/path/to/function\";\nDockerImage image = DockerImage.FromBuild(entry);\n\nstring domain = \"my-domain\";\nstring domainOwner = \"111122223333\";\nstring repoName = \"my_repo\";\nstring region = \"us-east-1\";\nstring codeArtifactAuthToken = ExecSync($\"aws codeartifact get-authorization-token --domain {domain} --domain-owner {domainOwner} --query authorizationToken --output text\").ToString().Trim();\n\nstring indexUrl = $\"https://aws:{codeArtifactAuthToken}@{domain}-{domainOwner}.d.codeartifact.{region}.amazonaws.com/pypi/{repoName}/simple/\";\n\nnew PythonFunction(this, \"function\", new PythonFunctionProps {\n    Entry = entry,\n    Runtime = Runtime.PYTHON_3_8,\n    Bundling = new BundlingOptions {\n        Environment = new Dictionary<string, string> { { \"PIP_INDEX_URL\", indexUrl } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "import child.process.execSync;\n\n\nString entry = \"/path/to/function\";\nDockerImage image = DockerImage.fromBuild(entry);\n\nString domain = \"my-domain\";\nString domainOwner = \"111122223333\";\nString repoName = \"my_repo\";\nString region = \"us-east-1\";\nString codeArtifactAuthToken = execSync(String.format(\"aws codeartifact get-authorization-token --domain %s --domain-owner %s --query authorizationToken --output text\", domain, domainOwner)).toString().trim();\n\nString indexUrl = String.format(\"https://aws:%s@%s-%s.d.codeartifact.%s.amazonaws.com/pypi/%s/simple/\", codeArtifactAuthToken, domain, domainOwner, region, repoName);\n\nPythonFunction.Builder.create(this, \"function\")\n        .entry(entry)\n        .runtime(Runtime.PYTHON_3_8)\n        .bundling(BundlingOptions.builder()\n                .environment(Map.of(\"PIP_INDEX_URL\", indexUrl))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/child_process\"\n\n\nentry := \"/path/to/function\"\nimage := awscdkcore.DockerImage.fromBuild(entry)\n\ndomain := \"my-domain\"\ndomainOwner := \"111122223333\"\nrepoName := \"my_repo\"\nregion := \"us-east-1\"\ncodeArtifactAuthToken := child_process.ExecSync(fmt.Sprintf(\"aws codeartifact get-authorization-token --domain %v --domain-owner %v --query authorizationToken --output text\", domain, domainOwner)).toString().trim()\n\nindexUrl := fmt.Sprintf(\"https://aws:%v@%v-%v.d.codeartifact.%v.amazonaws.com/pypi/%v/simple/\", codeArtifactAuthToken, domain, domainOwner, region, repoName)\n\nlambda.NewPythonFunction(this, jsii.String(\"function\"), &pythonFunctionProps{\n\tentry: jsii.String(entry),\n\truntime: *awscdkawslambda.Runtime_PYTHON_3_8(),\n\tbundling: &bundlingOptions{\n\t\tenvironment: map[string]*string{\n\t\t\t\"PIP_INDEX_URL\": indexUrl,\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import { execSync } from 'child_process';\n\nconst entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nconst domain = 'my-domain';\nconst domainOwner = '111122223333';\nconst repoName = 'my_repo';\nconst region = 'us-east-1';\nconst codeArtifactAuthToken = execSync(`aws codeartifact get-authorization-token --domain ${domain} --domain-owner ${domainOwner} --query authorizationToken --output text`).toString().trim();\n\nconst indexUrl = `https://aws:${codeArtifactAuthToken}@${domain}-${domainOwner}.d.codeartifact.${region}.amazonaws.com/pypi/${repoName}/simple/`;\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    environment: { PIP_INDEX_URL: indexUrl },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-lambda-python"
        },
        "field": {
          "field": "markdown",
          "line": 152
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.BundlingOptions",
        "@aws-cdk/aws-lambda-python.PythonFunction",
        "@aws-cdk/aws-lambda-python.PythonFunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#PYTHON_3_8",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.DockerImage",
        "@aws-cdk/core.DockerImage#fromBuild"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { execSync } from 'child_process';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nconst domain = 'my-domain';\nconst domainOwner = '111122223333';\nconst repoName = 'my_repo';\nconst region = 'us-east-1';\nconst codeArtifactAuthToken = execSync(`aws codeartifact get-authorization-token --domain ${domain} --domain-owner ${domainOwner} --query authorizationToken --output text`).toString().trim();\n\nconst indexUrl = `https://aws:${codeArtifactAuthToken}@${domain}-${domainOwner}.d.codeartifact.${region}.amazonaws.com/pypi/${repoName}/simple/`;\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    environment: { PIP_INDEX_URL: indexUrl },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "15": 2,
        "16": 5,
        "17": 2,
        "75": 32,
        "104": 1,
        "193": 3,
        "194": 5,
        "196": 4,
        "197": 1,
        "211": 2,
        "221": 7,
        "225": 8,
        "226": 1,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 4,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "937096e6de8abbfc0c6ef71131d8ebc7a98a6a03f77949e37a1b17d70c942abc"
    },
    "7db42e0bd2cd0eaf3ed5fd929ee86b54c1a7c65756139146fc163cefa05b8f4a": {
      "translations": {
        "python": {
          "source": "from child_process import exec_sync\n\n\nentry = \"/path/to/function\"\nimage = DockerImage.from_build(entry)\n\ndomain = \"my-domain\"\ndomain_owner = \"111122223333\"\nrepo_name = \"my_repo\"\nregion = \"us-east-1\"\ncode_artifact_auth_token = exec_sync(f\"aws codeartifact get-authorization-token --domain {domain} --domain-owner {domainOwner} --query authorizationToken --output text\").to_string().trim()\n\nindex_url = f\"https://aws:{codeArtifactAuthToken}@{domain}-{domainOwner}.d.codeartifact.{region}.amazonaws.com/pypi/{repoName}/simple/\"\n\nlambda_.PythonFunction(self, \"function\",\n    entry=entry,\n    runtime=Runtime.PYTHON_3_8,\n    bundling=lambda.BundlingOptions(\n        build_args={\"PIP_INDEX_URL\": index_url}\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Child.Process;\n\n\nstring entry = \"/path/to/function\";\nDockerImage image = DockerImage.FromBuild(entry);\n\nstring domain = \"my-domain\";\nstring domainOwner = \"111122223333\";\nstring repoName = \"my_repo\";\nstring region = \"us-east-1\";\nstring codeArtifactAuthToken = ExecSync($\"aws codeartifact get-authorization-token --domain {domain} --domain-owner {domainOwner} --query authorizationToken --output text\").ToString().Trim();\n\nstring indexUrl = $\"https://aws:{codeArtifactAuthToken}@{domain}-{domainOwner}.d.codeartifact.{region}.amazonaws.com/pypi/{repoName}/simple/\";\n\nnew PythonFunction(this, \"function\", new PythonFunctionProps {\n    Entry = entry,\n    Runtime = Runtime.PYTHON_3_8,\n    Bundling = new BundlingOptions {\n        BuildArgs = new Dictionary<string, string> { { \"PIP_INDEX_URL\", indexUrl } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "import child.process.execSync;\n\n\nString entry = \"/path/to/function\";\nDockerImage image = DockerImage.fromBuild(entry);\n\nString domain = \"my-domain\";\nString domainOwner = \"111122223333\";\nString repoName = \"my_repo\";\nString region = \"us-east-1\";\nString codeArtifactAuthToken = execSync(String.format(\"aws codeartifact get-authorization-token --domain %s --domain-owner %s --query authorizationToken --output text\", domain, domainOwner)).toString().trim();\n\nString indexUrl = String.format(\"https://aws:%s@%s-%s.d.codeartifact.%s.amazonaws.com/pypi/%s/simple/\", codeArtifactAuthToken, domain, domainOwner, region, repoName);\n\nPythonFunction.Builder.create(this, \"function\")\n        .entry(entry)\n        .runtime(Runtime.PYTHON_3_8)\n        .bundling(BundlingOptions.builder()\n                .buildArgs(Map.of(\"PIP_INDEX_URL\", indexUrl))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import \"github.com/aws-samples/dummy/child_process\"\n\n\nentry := \"/path/to/function\"\nimage := awscdkcore.DockerImage.fromBuild(entry)\n\ndomain := \"my-domain\"\ndomainOwner := \"111122223333\"\nrepoName := \"my_repo\"\nregion := \"us-east-1\"\ncodeArtifactAuthToken := child_process.ExecSync(fmt.Sprintf(\"aws codeartifact get-authorization-token --domain %v --domain-owner %v --query authorizationToken --output text\", domain, domainOwner)).toString().trim()\n\nindexUrl := fmt.Sprintf(\"https://aws:%v@%v-%v.d.codeartifact.%v.amazonaws.com/pypi/%v/simple/\", codeArtifactAuthToken, domain, domainOwner, region, repoName)\n\nlambda.NewPythonFunction(this, jsii.String(\"function\"), &pythonFunctionProps{\n\tentry: jsii.String(entry),\n\truntime: *awscdkawslambda.Runtime_PYTHON_3_8(),\n\tbundling: &bundlingOptions{\n\t\tbuildArgs: map[string]*string{\n\t\t\t\"PIP_INDEX_URL\": indexUrl,\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import { execSync } from 'child_process';\n\nconst entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nconst domain = 'my-domain';\nconst domainOwner = '111122223333';\nconst repoName = 'my_repo';\nconst region = 'us-east-1';\nconst codeArtifactAuthToken = execSync(`aws codeartifact get-authorization-token --domain ${domain} --domain-owner ${domainOwner} --query authorizationToken --output text`).toString().trim();\n\nconst indexUrl = `https://aws:${codeArtifactAuthToken}@${domain}-${domainOwner}.d.codeartifact.${region}.amazonaws.com/pypi/${repoName}/simple/`;\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: indexUrl },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-lambda-python"
        },
        "field": {
          "field": "markdown",
          "line": 179
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.BundlingOptions",
        "@aws-cdk/aws-lambda-python.PythonFunction",
        "@aws-cdk/aws-lambda-python.PythonFunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#PYTHON_3_8",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.DockerImage",
        "@aws-cdk/core.DockerImage#fromBuild"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { execSync } from 'child_process';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nconst domain = 'my-domain';\nconst domainOwner = '111122223333';\nconst repoName = 'my_repo';\nconst region = 'us-east-1';\nconst codeArtifactAuthToken = execSync(`aws codeartifact get-authorization-token --domain ${domain} --domain-owner ${domainOwner} --query authorizationToken --output text`).toString().trim();\n\nconst indexUrl = `https://aws:${codeArtifactAuthToken}@${domain}-${domainOwner}.d.codeartifact.${region}.amazonaws.com/pypi/${repoName}/simple/`;\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: indexUrl },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "15": 2,
        "16": 5,
        "17": 2,
        "75": 32,
        "104": 1,
        "193": 3,
        "194": 5,
        "196": 4,
        "197": 1,
        "211": 2,
        "221": 7,
        "225": 8,
        "226": 1,
        "242": 8,
        "243": 8,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 4,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "937096e6de8abbfc0c6ef71131d8ebc7a98a6a03f77949e37a1b17d70c942abc"
    },
    "34ed870cbbd03fceb889b70009fb6db3338c4b90c6d6d95cc210fd6fe80fe546": {
      "translations": {
        "python": {
          "source": "entry = \"/path/to/function\"\nimage = DockerImage.from_build(entry)\n\nlambda_.PythonFunction(self, \"function\",\n    entry=entry,\n    runtime=Runtime.PYTHON_3_8,\n    bundling=lambda.BundlingOptions(\n        build_args={\"PIP_INDEX_URL\": \"https://your.index.url/simple/\", \"PIP_EXTRA_INDEX_URL\": \"https://your.extra-index.url/simple/\"}\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "string entry = \"/path/to/function\";\nDockerImage image = DockerImage.FromBuild(entry);\n\nnew PythonFunction(this, \"function\", new PythonFunctionProps {\n    Entry = entry,\n    Runtime = Runtime.PYTHON_3_8,\n    Bundling = new BundlingOptions {\n        BuildArgs = new Dictionary<string, string> { { \"PIP_INDEX_URL\", \"https://your.index.url/simple/\" }, { \"PIP_EXTRA_INDEX_URL\", \"https://your.extra-index.url/simple/\" } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "String entry = \"/path/to/function\";\nDockerImage image = DockerImage.fromBuild(entry);\n\nPythonFunction.Builder.create(this, \"function\")\n        .entry(entry)\n        .runtime(Runtime.PYTHON_3_8)\n        .bundling(BundlingOptions.builder()\n                .buildArgs(Map.of(\"PIP_INDEX_URL\", \"https://your.index.url/simple/\", \"PIP_EXTRA_INDEX_URL\", \"https://your.extra-index.url/simple/\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "entry := \"/path/to/function\"\nimage := awscdkcore.DockerImage.fromBuild(entry)\n\nlambda.NewPythonFunction(this, jsii.String(\"function\"), &pythonFunctionProps{\n\tentry: jsii.String(entry),\n\truntime: *awscdkawslambda.Runtime_PYTHON_3_8(),\n\tbundling: &bundlingOptions{\n\t\tbuildArgs: map[string]*string{\n\t\t\t\"PIP_INDEX_URL\": jsii.String(\"https://your.index.url/simple/\"),\n\t\t\t\"PIP_EXTRA_INDEX_URL\": jsii.String(\"https://your.extra-index.url/simple/\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: \"https://your.index.url/simple/\", PIP_EXTRA_INDEX_URL: \"https://your.extra-index.url/simple/\" },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-lambda-python.BundlingOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.BundlingOptions",
        "@aws-cdk/aws-lambda-python.PythonFunction",
        "@aws-cdk/aws-lambda-python.PythonFunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#PYTHON_3_8",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.DockerImage",
        "@aws-cdk/core.DockerImage#fromBuild"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: \"https://your.index.url/simple/\", PIP_EXTRA_INDEX_URL: \"https://your.extra-index.url/simple/\" },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 15,
        "104": 1,
        "193": 3,
        "194": 3,
        "196": 1,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 5,
        "282": 1
      },
      "fqnsFingerprint": "937096e6de8abbfc0c6ef71131d8ebc7a98a6a03f77949e37a1b17d70c942abc"
    },
    "17034472dc3a9c45a310cfbb2923fb7301671222efab8bc02e0f69741b21f48a": {
      "translations": {
        "python": {
          "source": "entry = \"/path/to/function\"\nimage = DockerImage.from_build(entry)\n\nlambda_.PythonFunction(self, \"function\",\n    entry=entry,\n    runtime=Runtime.PYTHON_3_8,\n    bundling=lambda.BundlingOptions(\n        build_args={\"PIP_INDEX_URL\": \"https://your.index.url/simple/\", \"PIP_EXTRA_INDEX_URL\": \"https://your.extra-index.url/simple/\"}\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "string entry = \"/path/to/function\";\nDockerImage image = DockerImage.FromBuild(entry);\n\nnew PythonFunction(this, \"function\", new PythonFunctionProps {\n    Entry = entry,\n    Runtime = Runtime.PYTHON_3_8,\n    Bundling = new BundlingOptions {\n        BuildArgs = new Dictionary<string, string> { { \"PIP_INDEX_URL\", \"https://your.index.url/simple/\" }, { \"PIP_EXTRA_INDEX_URL\", \"https://your.extra-index.url/simple/\" } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "String entry = \"/path/to/function\";\nDockerImage image = DockerImage.fromBuild(entry);\n\nPythonFunction.Builder.create(this, \"function\")\n        .entry(entry)\n        .runtime(Runtime.PYTHON_3_8)\n        .bundling(BundlingOptions.builder()\n                .buildArgs(Map.of(\"PIP_INDEX_URL\", \"https://your.index.url/simple/\", \"PIP_EXTRA_INDEX_URL\", \"https://your.extra-index.url/simple/\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "entry := \"/path/to/function\"\nimage := awscdkcore.DockerImage.fromBuild(entry)\n\nlambda.NewPythonFunction(this, jsii.String(\"function\"), &pythonFunctionProps{\n\tentry: jsii.String(entry),\n\truntime: *awscdkawslambda.Runtime_PYTHON_3_8(),\n\tbundling: &bundlingOptions{\n\t\tbuildArgs: map[string]*string{\n\t\t\t\"PIP_INDEX_URL\": jsii.String(\"https://your.index.url/simple/\"),\n\t\t\t\"PIP_EXTRA_INDEX_URL\": jsii.String(\"https://your.extra-index.url/simple/\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: \"https://your.index.url/simple/\", PIP_EXTRA_INDEX_URL: \"https://your.extra-index.url/simple/\" },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-lambda-python.PythonFunction"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.BundlingOptions",
        "@aws-cdk/aws-lambda-python.PythonFunction",
        "@aws-cdk/aws-lambda-python.PythonFunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#PYTHON_3_8",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.DockerImage",
        "@aws-cdk/core.DockerImage#fromBuild"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: \"https://your.index.url/simple/\", PIP_EXTRA_INDEX_URL: \"https://your.extra-index.url/simple/\" },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 15,
        "104": 1,
        "193": 3,
        "194": 3,
        "196": 1,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 5,
        "282": 1
      },
      "fqnsFingerprint": "937096e6de8abbfc0c6ef71131d8ebc7a98a6a03f77949e37a1b17d70c942abc"
    },
    "cc8cf54dc91881bdf35a4abe674846f634dc96d9ccc9025045d26725671ea58d": {
      "translations": {
        "python": {
          "source": "entry = \"/path/to/function\"\nimage = DockerImage.from_build(entry)\n\nlambda_.PythonFunction(self, \"function\",\n    entry=entry,\n    runtime=Runtime.PYTHON_3_8,\n    bundling=lambda.BundlingOptions(\n        build_args={\"PIP_INDEX_URL\": \"https://your.index.url/simple/\", \"PIP_EXTRA_INDEX_URL\": \"https://your.extra-index.url/simple/\"}\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "string entry = \"/path/to/function\";\nDockerImage image = DockerImage.FromBuild(entry);\n\nnew PythonFunction(this, \"function\", new PythonFunctionProps {\n    Entry = entry,\n    Runtime = Runtime.PYTHON_3_8,\n    Bundling = new BundlingOptions {\n        BuildArgs = new Dictionary<string, string> { { \"PIP_INDEX_URL\", \"https://your.index.url/simple/\" }, { \"PIP_EXTRA_INDEX_URL\", \"https://your.extra-index.url/simple/\" } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "String entry = \"/path/to/function\";\nDockerImage image = DockerImage.fromBuild(entry);\n\nPythonFunction.Builder.create(this, \"function\")\n        .entry(entry)\n        .runtime(Runtime.PYTHON_3_8)\n        .bundling(BundlingOptions.builder()\n                .buildArgs(Map.of(\"PIP_INDEX_URL\", \"https://your.index.url/simple/\", \"PIP_EXTRA_INDEX_URL\", \"https://your.extra-index.url/simple/\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "entry := \"/path/to/function\"\nimage := awscdkcore.DockerImage.fromBuild(entry)\n\nlambda.NewPythonFunction(this, jsii.String(\"function\"), &pythonFunctionProps{\n\tentry: jsii.String(entry),\n\truntime: *awscdkawslambda.Runtime_PYTHON_3_8(),\n\tbundling: &bundlingOptions{\n\t\tbuildArgs: map[string]*string{\n\t\t\t\"PIP_INDEX_URL\": jsii.String(\"https://your.index.url/simple/\"),\n\t\t\t\"PIP_EXTRA_INDEX_URL\": jsii.String(\"https://your.extra-index.url/simple/\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: \"https://your.index.url/simple/\", PIP_EXTRA_INDEX_URL: \"https://your.extra-index.url/simple/\" },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-lambda-python.PythonFunctionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.BundlingOptions",
        "@aws-cdk/aws-lambda-python.PythonFunction",
        "@aws-cdk/aws-lambda-python.PythonFunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#PYTHON_3_8",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.DockerImage",
        "@aws-cdk/core.DockerImage#fromBuild"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst entry = '/path/to/function';\nconst image = DockerImage.fromBuild(entry);\n\nnew lambda.PythonFunction(this, 'function', {\n  entry,\n  runtime: Runtime.PYTHON_3_8,\n  bundling: {\n    buildArgs: { PIP_INDEX_URL: \"https://your.index.url/simple/\", PIP_EXTRA_INDEX_URL: \"https://your.extra-index.url/simple/\" },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 15,
        "104": 1,
        "193": 3,
        "194": 3,
        "196": 1,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 5,
        "282": 1
      },
      "fqnsFingerprint": "937096e6de8abbfc0c6ef71131d8ebc7a98a6a03f77949e37a1b17d70c942abc"
    },
    "e8e6e1f9267fc3e8e86b408f6792e5f30b919459b39ffa08c8e1b4f6f78159e4": {
      "translations": {
        "python": {
          "source": "lambda_.PythonLayerVersion(self, \"MyLayer\",\n    entry=\"/path/to/my/layer\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new PythonLayerVersion(this, \"MyLayer\", new PythonLayerVersionProps {\n    Entry = \"/path/to/my/layer\"\n});",
          "version": "1"
        },
        "java": {
          "source": "PythonLayerVersion.Builder.create(this, \"MyLayer\")\n        .entry(\"/path/to/my/layer\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "lambda.NewPythonLayerVersion(this, jsii.String(\"MyLayer\"), &pythonLayerVersionProps{\n\tentry: jsii.String(\"/path/to/my/layer\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new lambda.PythonLayerVersion(this, 'MyLayer', {\n  entry: '/path/to/my/layer', // point this to your library's directory\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-lambda-python.PythonLayerVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.PythonLayerVersion",
        "@aws-cdk/aws-lambda-python.PythonLayerVersionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew lambda.PythonLayerVersion(this, 'MyLayer', {\n  entry: '/path/to/my/layer', // point this to your library's directory\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 3,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "9ed95562a1d6cbfa36d90ddb816223a90d0a1798c5bbd66942a9fdfe0ac7dbc7"
    },
    "69b245d7ee1fdccaea7f66cab599d8808d39233b4ef6cc02cd77efbf0cb7fd06": {
      "translations": {
        "python": {
          "source": "lambda_.PythonLayerVersion(self, \"MyLayer\",\n    entry=\"/path/to/my/layer\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new PythonLayerVersion(this, \"MyLayer\", new PythonLayerVersionProps {\n    Entry = \"/path/to/my/layer\"\n});",
          "version": "1"
        },
        "java": {
          "source": "PythonLayerVersion.Builder.create(this, \"MyLayer\")\n        .entry(\"/path/to/my/layer\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "lambda.NewPythonLayerVersion(this, jsii.String(\"MyLayer\"), &pythonLayerVersionProps{\n\tentry: jsii.String(\"/path/to/my/layer\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new lambda.PythonLayerVersion(this, 'MyLayer', {\n  entry: '/path/to/my/layer', // point this to your library's directory\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-lambda-python.PythonLayerVersionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-lambda-python.PythonLayerVersion",
        "@aws-cdk/aws-lambda-python.PythonLayerVersionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { DockerImage, Stack } from '@aws-cdk/core';\nimport { Runtime } from '@aws-cdk/aws-lambda';\nimport * as lambda from '@aws-cdk/aws-lambda-python';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew lambda.PythonLayerVersion(this, 'MyLayer', {\n  entry: '/path/to/my/layer', // point this to your library's directory\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 3,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "9ed95562a1d6cbfa36d90ddb816223a90d0a1798c5bbd66942a9fdfe0ac7dbc7"
    }
  }
}
